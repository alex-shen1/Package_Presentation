fewfwefwfeefwf
asdf
asdf
asdf
asdf
sdaf
clear
clear
clc()
rm
rm()
ls
# The following code is from the ggplot lab and is not necessarily part of our project.
# This changes the labels for the econ_data dataframe
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa",
"Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
# Labels for the countries.
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina",
"Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda",
"Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain",
"Japan", "Barbados", "Norway", "Singapore", "New Zealand")
# This creates our ggplot object with the correct variables
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
# This changes the shape and size of each point in the scatterplot
plot = plot +
geom_point(aes(color=str_wrap(Region,15),
text=paste(Country, "\nCPI: ", CPI, "\nHDI ",HDI)),
size = 3,
shape = 1,
stroke = 0.5)
# Adds labels to the countries that are labeled in the original graph
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
# Scales and formats the axes
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
# Sets the colors of the points to the hex values of the colors in the original graph
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e",
"#f58171", "#1b5e73", "#9d5743"))
# Changes the graph and axis titles
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
# Formats and positions the legend of the graph.
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
# Runs a linear regression model between HDI and the log of CPI.
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2) #calculates r^2
# Plots our r^2 value onto to the graph
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
library(ggplot2)
# The following code is from the ggplot lab and is not necessarily part of our project.
# This changes the labels for the econ_data dataframe
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa",
"Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
# Labels for the countries.
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina",
"Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda",
"Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain",
"Japan", "Barbados", "Norway", "Singapore", "New Zealand")
# This creates our ggplot object with the correct variables
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
# This changes the shape and size of each point in the scatterplot
plot = plot +
geom_point(aes(color=str_wrap(Region,15),
text=paste(Country, "\nCPI: ", CPI, "\nHDI ",HDI)),
size = 3,
shape = 1,
stroke = 0.5)
# Adds labels to the countries that are labeled in the original graph
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
# Scales and formats the axes
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
# Sets the colors of the points to the hex values of the colors in the original graph
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e",
"#f58171", "#1b5e73", "#9d5743"))
# Changes the graph and axis titles
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
# Formats and positions the legend of the graph.
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
# Runs a linear regression model between HDI and the log of CPI.
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2) #calculates r^2
# Plots our r^2 value onto to the graph
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
econ_data <- read_csv('EconomistData.csv')
fig = plot_ly(data=econ_data, x=~CPI, y=~HDI, type="scatter", mode="markers", color = ~Region, symbols = 'o', colors ="Set1")
fig = fig %>% layout(title = '<b>Corruption and human development',
xaxis = list(title="Corruption Perceptions Index, 2011 (10=least corrupt"),
yaxis = list(title="Human Development Index, 2011 (1=best)"))
fig
11:35
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa", "Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina", "Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain", "Japan", "Barbados", "Norway", "Singapore", "New Zealand")
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
plot = plot +
geom_point(aes(color=str_wrap(Region,15)),
size = 3,
shape = 1,
stroke = 1)
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e", "#f58171", "#1b5e73", "#9d5743"))
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2)
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
#plot
ggplotly(plot)
library(tidyverse)
library(readr)
library(plotly)
library(ggrepel)
econ_data <- read_csv('EconomistData.csv')
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa", "Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina", "Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain", "Japan", "Barbados", "Norway", "Singapore", "New Zealand")
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
plot = plot +
geom_point(aes(color=str_wrap(Region,15)),
size = 3,
shape = 1,
stroke = 1)
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e", "#f58171", "#1b5e73", "#9d5743"))
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2)
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
#plot
ggplotly(plot)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2)
mod <- lm(HDI ~ log(CPI), data = econ_data)
econ_data <- read_csv('EconomistData.csv')
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa", "Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina", "Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain", "Japan", "Barbados", "Norway", "Singapore", "New Zealand")
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
plot = plot +
geom_point(aes(color=str_wrap(Region,15)),
size = 3,
shape = 1,
stroke = 1)
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e", "#f58171", "#1b5e73", "#9d5743"))
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2)
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
econ_data <- read_csv('EconomistData.csv')
setwd("C:/Users/Alex/Documents/GitHub/Package_Presentation")
econ_data <- read_csv('EconomistData.csv')
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa", "Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina", "Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda", "Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain", "Japan", "Barbados", "Norway", "Singapore", "New Zealand")
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
plot = plot +
geom_point(aes(color=str_wrap(Region,15)),
size = 3,
shape = 1,
stroke = 1)
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e", "#f58171", "#1b5e73", "#9d5743"))
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2)
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
ggplotly(plot)
# The following code is from the ggplot lab and is not necessarily part of our project.
# This changes the labels for the econ_data dataframe
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa",
"Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
# Labels for the countries.
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina",
"Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda",
"Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain",
"Japan", "Barbados", "Norway", "Singapore", "New Zealand")
# This creates our ggplot object with the correct variables
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
# This changes the shape and size of each point in the scatterplot
plot = plot +
geom_point(aes(color=str_wrap(Region,15),
text=paste(Country, "\nCPI: ", CPI, "\nHDI ",HDI)),
size = 3,
shape = 1,
stroke = 0.5)
# Adds labels to the countries that are labeled in the original graph
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
# Scales and formats the axes
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
# Sets the colors of the points to the hex values of the colors in the original graph
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e",
"#f58171", "#1b5e73", "#9d5743"))
# Changes the graph and axis titles
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
# Formats and positions the legend of the graph.
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
# Runs a linear regression model between HDI and the log of CPI.
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2) #calculates r^2
# Plots our r^2 value onto to the graph
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
# This function converts our ggplot object "plot" into a plot_ly object.
ggplotly(plot, tooltip="text") # "text" is an attribute set in geom_point
# The following code is from the ggplot lab and is not necessarily part of our project.
# This changes the labels for the econ_data dataframe
curr_labs = c("EU W. Europe","Asia Pacific","MENA","SSA","East EU Cemt Asia")
new_labs = c("OECD","Asia & Oceania","Middle East & north Africa","Sub-Saharan Africa",
"Central & Eastern Europe")
change_labs = function(df, curr, new){
df %>% mutate_if(is.character, str_replace_all, pattern = curr, replacement = new)
}
for(index in c(1:length(curr_labs))){
econ_data = change_labs(econ_data, curr_labs[index], new_labs[index])
}
# Labels for the countries.
countries = c("Russia", "Venezuela", "Iraq", "Myanmar", "Sudan", "Afghanistan", "Argentina",
"Congo", "Greece", "Brazil", "India", "Italy", "China", "South Africa", "Rwanda",
"Cape Verde", "Bhutan", "Botswana", "Spain", "France", "US", "Germany", "Britain",
"Japan", "Barbados", "Norway", "Singapore", "New Zealand")
# This creates our ggplot object with the correct variables
plot = ggplot(data=econ_data,
aes(x=CPI, y=HDI)) +
theme_bw()
# This changes the shape and size of each point in the scatterplot
plot = plot +
geom_point(aes(color=str_wrap(Region,15),
text=paste(Country, "\nCPI: ", CPI, "\nHDI ",HDI)),
size = 3,
shape = 1,
stroke = 0.5)
# Adds labels to the countries that are labeled in the original graph
plot = plot +
geom_text_repel(data=subset(econ_data, Country %in% countries),
aes(label=Country),
color="black", point.padding = T)
# Scales and formats the axes
plot = plot +
scale_y_continuous(breaks=seq(0.2, 1, 0.1),
limits=c(.2,1.0)) +
scale_x_continuous(breaks=seq(1,10),
limits=c(1,10)) +
theme(panel.grid.minor.y = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.border = element_blank())
# Sets the colors of the points to the hex values of the colors in the original graph
plot = plot +
scale_color_manual(values = c("#3eb7e0", "#91daf3", "#3ea69e",
"#f58171", "#1b5e73", "#9d5743"))
# Changes the graph and axis titles
plot = plot +
labs(x = "Corruption Perceptions Index, 2011 (10=least corrupt)",
y = "Human Development Index, 2011 (1=best)",
title = "Corruption and human development") +
theme(plot.title = element_text(face="bold"))
# Formats and positions the legend of the graph.
plot = plot +
theme(legend.position = "top",
legend.title = element_blank()) +
guides(color = guide_legend(nrow = 1))
# Runs a linear regression model between HDI and the log of CPI.
mod <- lm(HDI ~ log(CPI), data = econ_data)
r2 <- broom::glance(mod) %>% pull(r.squared) %>% round(., 2) #calculates r^2
# Plots our r^2 value onto to the graph
plot = plot +
geom_smooth(method = 'lm', formula = y ~ log(x), se=F, color = "#ed1b22") +
annotate(geom = 'text',
x = 9, y = .5,
label=glue::glue("R^2 == {r}",r=r2),
size=5,
parse=T, color = "#ed1b22")
# This function converts our ggplot object "plot" into a plot_ly object.
ggplotly(plot, tooltip="text") # "text" is an attribute set in geom_point
